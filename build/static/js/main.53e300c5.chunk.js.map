{"version":3,"sources":["static/zoom.png","store/galleryAction.js","components/galleryCard/modal/modal.js","components/galleryCard/box.js","pages/gallery.js","App.js","store/galleryReducer.js","store/store.js","index.js"],"names":["module","exports","__webpack_require__","p","getPhotosAction","dispatch","axios","get","then","res","type","payload","data","catch","err","console","log","Modal","props","_useState","useState","_useState2","Object","slicedToArray","photos","setPhotos","_useState3","_useState4","photo","setPhoto","_useState5","_useState6","counter","setCounter","useEffect","init_photo","init_counter","undefined","react_default","a","createElement","className","name","data-carousel","data-carousel-button","onClick","length","data-slides","data-active","src","url","alt","concat","Box","photoClicked","counterClicked","modelVisible","setModalVisible","Fragment","map","index","key","uuid","height","width","photoState","setPhotoStates","icon","data-modal","href","Gallery","useDispatch","useSelector","state","photosList","App","intial_value","store","createStore","arguments","action","objectSpread","composeWithDevTools","applyMiddleware","thunk","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","src_App"],"mappings":"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","file":"static/js/main.53e300c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zoom.96d166e0.png\";","import axios from 'axios'\r\n\r\n// action to fetch data from api request with axios \r\nexport const getPhotosAction = () => (dispatch) => {\r\n\r\n    return axios.get('https://scaleflex.cloudimg.io/v7/0.fe_task_static/pictures.json?vh=7a646d&func=proxy')\r\n    // if succeed then dispatach with type and payload\r\n    // dispatch -> event handler\r\n    .then((res) => \r\n    {\r\n        dispatch({\r\n            type: \"LIST_PHOTOS\",\r\n            payload: res.data,\r\n\r\n        })\r\n        \r\n    }        \r\n    )\r\n    // if faild then show error message on the console\r\n    .catch((err) => console.log(err));\r\n}","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./modal.css\";\r\n\r\nexport default function Modal(props) {\r\n    // declare states\r\n    const [photos, setPhotos] = useState();\r\n    let [photo, setPhoto] = useState();\r\n    let [counter, setCounter] = useState();\r\n  \r\n    // initialize state \r\n    useEffect(() => {\r\n        setPhoto(props.init_photo);\r\n        setCounter(props.init_counter);\r\n        setPhotos(props.photos);\r\n    });\r\n\r\n    // change states values after any change of one of them\r\n    useEffect(() => {\r\n        setPhoto(photo);\r\n        setCounter(counter);\r\n    },[photo,counter]);\r\n\r\n    // function to get next image on click next button\r\n    let getNextImage = () => {\r\n        // if counter equal to length that means we at the end of array\r\n        // then set it to 0 again \r\n        // else plus one on counter and get next image\r\n        counter === photos.length - 1 ? (counter = 0) : counter++;\r\n\r\n        // set new values of counter and photo\r\n        setCounter(counter);\r\n        setPhoto(photos[counter]);\r\n\r\n    };\r\n\r\n    // function to get previous image on click previous button\r\n    let getPreviousImage = () => {\r\n        // if counter equal to 0 that means we at the beginning of array\r\n        // then let it also 0 to begin at 0 \r\n        // else minus one on counter and get previous image\r\n        counter === 0 ? (counter = 0) : counter--;\r\n\r\n         // set new values of counter and photo\r\n        setCounter(counter);\r\n        setPhoto(photos[counter]);\r\n    };\r\n\r\n    return (\r\n        // if photo has a value and not undefined show jsx\r\n        // else null \"show nothing\"\r\n        photo !== undefined ? (\r\n                <div className=\"row\">\r\n                    <h2 className=\"paragraph \">{photo.name}</h2>\r\n\r\n                    <div className=\"carousel\" data-carousel>\r\n                        {/* button to get previous image */}\r\n                        <button\r\n                            className=\"carousel-button prev\"\r\n                            data-carousel-button=\"prev\"\r\n                            onClick={() => getPreviousImage()}\r\n                        >\r\n                            &#8656;\r\n                        </button>\r\n\r\n                        {/* button to get next image */}\r\n                        <button\r\n                            className=\"carousel-button next\"\r\n                            data-carousel-button=\"next\"\r\n                            onClick={() => getNextImage()}\r\n                        >\r\n                            &#8658;\r\n                        </button>\r\n\r\n                        {/* add css attribute to style the slider */}\r\n                        <ul data-slides>\r\n\r\n                            {/* pass state data to jsx image */}\r\n                            <li className=\"slide\" data-active>\r\n                                <img src={photo.url} alt={photo.name} />\r\n                            </li>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                    <div className=\"container\">\r\n                    <div className=\"paragraph \">{`${counter+1}/${photos.length}`}</div>\r\n                    </div>\r\n                </div>\r\n          \r\n        ) : null\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport icon from \"../../static/zoom.png\";\r\nimport \"./box.css\";\r\nimport Modal from \"./modal/modal\";\r\nimport './popup/popup.css'\r\nexport default function Box(props) {\r\n  // declare states\r\n  let [photoClicked, setPhoto] = useState();\r\n  let [counterClicked, setCounter] = useState();\r\n  let [modelVisible, setModalVisible] = useState(false);\r\n\r\n  // function to initialize states on click\r\n  const setPhotoStates = (photoState, index) => {\r\n    setModalVisible(true);\r\n    setPhoto(photoState);\r\n    setCounter(index);\r\n    // console.log(\"hello from clickedd\")\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {/* loop over props array to list all photos on gallery page */}\r\n          {props.photos.map((photo, index) => {\r\n            return (\r\n              <div\r\n                key={photo.uuid}\r\n                className=\"container mt-4 col-lg-4 col-xs-4 col-sm-6\"\r\n              >\r\n                <div className=\"row container-one\">\r\n                  <img\r\n                    src={photo.url}\r\n                    alt={photo.name}\r\n                    height={250}\r\n                    width={250}\r\n                  />\r\n\r\n                  {/* button to set photo states on click */}\r\n                  <button className=\"hidden_img\" onClick={() => setPhotoStates(photo, index)}>\r\n                    <img\r\n                      src={icon}\r\n                      alt=\"zoom icon\"\r\n                      data-modal=\"true\"\r\n                      height={50}\r\n                      width={50}\r\n                    />\r\n                  </button>\r\n                </div>\r\n\r\n              </div>\r\n            );\r\n          })}\r\n          {/* if modal visible then show popup slider */}\r\n          {modelVisible &&\r\n            <div className=\"overlay\">\r\n              <div className=\"popup\">\r\n                <a className=\"close\" href=\"/GalleryApp\">&times;</a>\r\n                <div className=\"container\">\r\n                  {/* pass props to modal component to fill the slider */}\r\n                  <Modal photos={props.photos} init_counter={counterClicked} init_photo={photoClicked} />\r\n                </div>\r\n              </div>\r\n            </div>}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { getPhotosAction } from \"../store/galleryAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Box from \"../components/galleryCard/box\";\r\n\r\nexport default function Gallery() {\r\n\r\n  const dispatch = useDispatch();\r\n  // get photos array from store\r\n  const photos = useSelector((state) => state.photosList);\r\n\r\n  // fetch data from api request first thing in the page \r\n  // and put it in redux store\r\n  useEffect(() => {\r\n    dispatch(getPhotosAction());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"p_paragraph col-lg-12 col-xs-12 col-sm-12\">Gallery</div>\r\n      </div>\r\n      <div className=\"row\">\r\n        {/* pass photos props to box component to loop over it and implement the galary */}\r\n        <Box photos={photos} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport Gallery from \"./pages/gallery\";\r\n\r\nfunction App() {\r\n  // call gallery component to fire in app component\r\n  return <Gallery />;\r\n}\r\n\r\nexport default App;\r\n","// declare initial value object\r\nconst intial_value = {\r\n    photosList: [],\r\n}\r\n\r\n// reducer check type of action and compare values \r\nexport default function getPhotosReducer (state = intial_value, action){\r\n    // first, check action type\r\n    switch (action.type) {\r\n        // if likr type \"LIST_PHOTOS\" then store data instead of initial state\r\n        case 'LIST_PHOTOS':\r\n            return {\r\n                ...state,\r\n                photosList: action.payload,\r\n            }\r\n        // else keep the data of the initial state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import reducer from './galleryReducer';\r\nimport {createStore , applyMiddleware} from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\n//createStore is built in function in redux with parameter reducer\r\nconst store =createStore(reducer,composeWithDevTools(applyMiddleware(thunk)));\r\n    \r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store'\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n      {/* provider store to use redux  */}\r\n      <Provider store={store}> \r\n    {/* call app component to fire in index page */}\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}